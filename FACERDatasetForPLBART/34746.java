    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        int result;
        //é€šè¿‡MeasureSpec.getModeä¸ŽgetSizeæ–¹æ³•èŽ·å?–å®½å’Œé«˜çš„æµ‹é‡?æ–¹å¼?ä¸Žæµ‹é‡?å¤§å°?
        int widthMode = MeasureSpec.getMode(widthMeasureSpec);
        int widthSize = MeasureSpec.getSize(widthMeasureSpec);
        int heightMode = MeasureSpec.getMode(heightMeasureSpec);
        int heightSize = MeasureSpec.getSize(heightMeasureSpec);
        //ä¿?å­˜æœ€å?Žçš„æµ‹é‡?å€¼ï¼Œä¼˜åŒ–ä»£ç ?çš„è¯?å?¯ä»¥ä¸?ç”¨è¿™ä¸ªå?˜é‡?çš„ã€‚
        int width = 0, height = 0;
        //å¯¹æµ‹é‡?æ¨¡å¼?è¿›è¡Œåˆ¤æ–­ï¼Œå¦‚æžœæ˜¯EXACTLYçš„è¯?åˆ™æœ€å?Žçš„æµ‹é‡?å€¼å°±æ˜¯ç³»ç»Ÿå¸®æˆ‘ä»¬æµ‹é‡?çš„ç»“æžœã€‚
        if (widthMode == MeasureSpec.EXACTLY) {
            width = widthSize;
        } else {
            //å¦‚æžœæ˜¯UNSPECIFIED åˆ™ä½¿ç”¨æˆ‘ä»¬çš„é»˜è®¤å€¼ä½œä¸ºæœ€å?Žçš„æµ‹é‡?å€¼
            result = 300;
            //å¦‚æžœæ˜¯AT_MOST åˆ™å°±è¦?ç”¨ç³»ç»Ÿæµ‹é‡?ç»“æžœä¸Žæˆ‘ä»¬é»˜è®¤ç»“æžœå?–æœ€å°?å€¼æ?¥å†³å®šæœ€å?Žçš„æµ‹é‡?ç»“æžœ
            if (widthMode == MeasureSpec.AT_MOST) {
                width = Math.min(result, widthSize);
            }
        }
        //é«˜åº¦å’Œå®½åº¦çš„è¿‡ç¨‹æ˜¯ä¸€è‡´çš„ã€‚
        if (heightMode == MeasureSpec.EXACTLY) {
            height = heightSize;
        } else {
            result = 300;
            if (heightMode == MeasureSpec.AT_MOST) {
                height = Math.min(result, heightSize);
            }
        }
        //æŠŠæˆ‘ä»¬æœ€å?Žçš„å®½å’Œé«˜è®¾ç½®è¿›åŽ»
        viewHeight = height;
        viewWidth = width;
        setMeasuredDimension(width, height);
    }

