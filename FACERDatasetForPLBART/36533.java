    /**
     * æ ¹æ?®å¾—åˆ°çš„å¤©æ°”typeï¼Œè¿”å›žå¯¹åº”çš„å¤©æ°”å›¾ç‰‡Id
     *
     * @author æ¢?é¹?å®‡ 2016-7-30 ä¸‹å?ˆ8:26:35
     */
    public static int selectImage(String type) {
        int icId;
        switch (type) {
            case "é˜´":
                icId = R.mipmap.weather_cloudy_day;
                break;
            case "å¤šäº‘":
                icId = R.mipmap.weather_cloudy_weather;
                break;
            case "é›¾":
                icId = R.mipmap.weather_fog;
                break;
            case "éœ¾":
                icId = R.mipmap.weather_haze;
                break;
            case "å¤§é›¨":
                icId = R.mipmap.weather_rain_heavy;
                break;
            case "å°?é›¨":
                icId = R.mipmap.weather_rain_light;
                break;
            case "ä¸­é›¨":
                icId = R.mipmap.weather_rain_moderate;
                break;
            case "å°?åˆ°ä¸­é›¨":
                icId = R.mipmap.weather_rain_light_moderate;
                break;
            case "ä¸­åˆ°å¤§é›¨":
                icId = R.mipmap.weather_rain_moderate_heavy;
                break;
            case "é˜µé›¨":
                icId = R.mipmap.weather_rain_shower;
                break;
            case "é›·é˜µé›¨":
                icId = R.mipmap.weather_rain_thunderstorms;
                break;
            case "æš´é›¨":
                icId = R.mipmap.weather_rain_torrential;
                break;
            case "é›¨å¤¹é›ª":
                icId = R.mipmap.weather_sleet;
                break;
            case "å¤§é›ª":
                icId = R.mipmap.weather_snow_heavy;
                break;
            case "å°?é›ª":
                icId = R.mipmap.weather_snow_light;
                break;
            case "ä¸­é›ª":
                icId = R.mipmap.weather_snow_moderate;
                break;
            case "é˜µé›ª":
                icId = R.mipmap.weather_snow_shower;
                break;
            case "æš´é›ª":
                icId = R.mipmap.weather_snow_torrential;
                break;
            case "æ™´":
                icId = R.mipmap.weather_sunny_day;
                break;
            default:
                icId = R.mipmap.not_applicable;
                break;
        }
        return icId;
    }

