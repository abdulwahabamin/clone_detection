    /**
     * æ›´æ–°åŸŽå¸‚åˆ—è¡¨:
     * 1/(cityName, null)-åˆ é™¤cityName.
     * 2/(null, "remove")-åˆ é™¤cityNameå?Žæ›´æ–°åˆ—è¡¨ï¼Œå¹¶æŒ‡å®šç¬¬ä¸€ä¸ªåŸŽå¸‚ä¸ºnonce_cityï¼Œç„¶å?Žå±•ç¤ºå½“å‰?åŸŽå¸‚.
     * 3/(cityName, "add")-æ·»åŠ cityNameåˆ°åŸŽå¸‚åˆ—è¡¨ï¼Œå¹¶æŒ‡å®šä¸ºnonce_cityï¼Œç„¶å?Žå±•ç¤ºå½“å‰?åŸŽå¸‚.
     * 4/(null, null)-æ›´æ–°åŸŽå¸‚åˆ—è¡¨ï¼Œç„¶å?Žå±•ç¤ºå½“å‰?åŸŽå¸‚.
     *
     * @author æ¢?é¹?å®‡ 2016-8-7 ä¸‹å?ˆ2:07:58
     */
    private void updateCityList(String cityName, String weatherCode) {
        if (cityName != null && weatherCode == null) {
            // å?ªä¼ å…¥åŸŽå¸‚å??æ—¶ï¼šåˆ é™¤è¯¥åŸŽå¸‚å¹¶æ›´æ–°
            SharedPreferences.Editor editor = getSharedPreferences("data_city", MODE_PRIVATE).edit();
            editor.remove(cityName);
            editor.commit();
            editor = getSharedPreferences(cityName, MODE_PRIVATE).edit();
            editor.clear();
            editor.commit();
            updateCityList(null, "remove");
        } else {
            // å°†æ–°æ·»åŠ çš„åŸŽå¸‚æ›´æ–°åˆ°HashMapå’ŒArrayListä¸­
            SharedPreferences prefs = getSharedPreferences("data_city", MODE_PRIVATE);
            cityName_weatherCode.clear();
            cityName_weatherCode.putAll((HashMap<String, String>) prefs.getAll());
            cities.clear();
            ArrayList<String> temp = new ArrayList<String>(10);
            temp.addAll(cityName_weatherCode.keySet());

            // åˆ?å§‹åŒ–åŸŽå¸‚åˆ—è¡¨æ•°æ?®
            for (int i = 0; i < temp.size(); i++) {
                CityList t = new CityList(temp.get(i));
                cities.add(t);
            }

            // å¦‚æžœæœ‰ä¼ å…¥flagæ ‡è®°ï¼Œåˆ™è¯?æ˜Žæ˜¯åˆšåˆšåˆ é™¤äº†åŸŽå¸‚ï¼Œæ‰€ä»¥è¦?é‡?æ–°æŒ‡å®šnonce_city
            if (weatherCode != null) {
                if (weatherCode.equals("remove")) {
                    // æ›´æ–°å½“å‰?åŸŽå¸‚çš„æ ‡è®°ï¼Œå¹¶æ˜¾ç¤ºå½“å‰?åˆ—è¡¨ä¸­ç¬¬ä¸€ä¸ªåŸŽå¸‚
                    SharedPreferences.Editor editor = getSharedPreferences("data_setting", MODE_PRIVATE).edit();
                    if (temp.size() != 0) {
                        editor.putString("nonce_city", temp.get(0));
                        editor.commit();
                        showWeather(temp.get(0));
                    } else {
                        editor.putString("nonce_city", null);
                        editor.commit();
                        showWeather(null);
                    }
                } else if (weatherCode.equals("add")) {
                    SharedPreferences.Editor editor = getSharedPreferences("data_setting", MODE_PRIVATE).edit();
                    editor.putString("nonce_city", cityName);
                    editor.commit();
                    showWeather(cityName);
                }
            } else {
                SharedPreferences.Editor editor = getSharedPreferences("data_setting", MODE_PRIVATE).edit();
                editor.commit();
                prefs = getSharedPreferences("data_setting", MODE_PRIVATE);
                showWeather(prefs.getString("nonce_city", null));
            }

            CityListAdapter adapter = new CityListAdapter(WeatherActivity.this, R.layout.citylist_item, cities);
            city_list.setAdapter(adapter);

            // ä¸ºåŸŽå¸‚åˆ—è¡¨å»ºç«‹ç‚¹å‡»ç›‘å?¬äº‹ä»¶ï¼ˆæ˜¾ç¤ºç‚¹å‡»çš„åŸŽå¸‚ï¼‰
            city_list.setOnItemClickListener(new OnItemClickListener() {

                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    drawer_layout.closeDrawers();
                    CityList t = cities.get(position);
                    showWeather(t.getCityName());
                }
            });

            // ä¸ºåŸŽå¸‚åˆ—è¡¨å»ºç«‹é•¿æŒ‰ç›‘å?¬äº‹ä»¶ï¼ˆåˆ é™¤é•¿æŒ‰çš„åŸŽå¸‚ï¼‰
            city_list.setOnItemLongClickListener(new OnItemLongClickListener() {

                @Override
                public boolean onItemLongClick(AdapterView<?> parent, View view, final int position, long id) {

                    // å¼¹å‡ºç¡®è®¤åˆ é™¤å¯¹è¯?æ¡†
                    alert = null;
                    builder = new AlertDialog.Builder(WeatherActivity.this, android.R.style.Theme_Material_Light_Dialog_Alert);
                    alert = builder.setMessage("çœŸçš„è¦?åˆ é™¤æˆ‘å?—~").setNegativeButton("å?–æ¶ˆ", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                        }
                    }).setPositiveButton("ç¡®å®š", new DialogInterface.OnClickListener() {
                        @Override
                        public void onClick(DialogInterface dialog, int which) {
                            CityList t = cities.get(position);
                            updateCityList(t.getCityName(), null);
                        }
                    }).create(); // åˆ›å»ºAlertDialogå¯¹è±¡
                    alert.show(); // æ˜¾ç¤ºå¯¹è¯?æ¡†

                    // é•¿æŒ‰äº‹ä»¶å?Žä¸?æƒ³ç»§ç»­æ‰§è¡Œç‚¹å‡»äº‹ä»¶æ—¶ï¼Œåº”è¿”å›žtrue
                    return true;
                }
            });
        }
    }

