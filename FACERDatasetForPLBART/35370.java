    @Override
    public void showDialog(final String name, final Context context) {
        AlertDialog.Builder dialogBuilder;
        try {
            if (MyApplication.nightMode2()) {
                dialogBuilder = new AlertDialog.Builder(context, R.style.NightDialog);
            } else {
                dialogBuilder = new AlertDialog.Builder(context);
            }
            dialogBuilder.setTitle("ç³»ç»Ÿæ??ç¤º").setMessage("å½“å‰?å®šä½?åˆ°çš„åŸŽå¸‚ä¸ºï¼š" + name + ",æ˜¯å?¦å°†è¯¥åŸŽå¸‚è®¾ä¸ºé¦–é¡µ").setPositiveButton("ç¡®å®š", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                    if (mCityRepository.isExistInLoveCity(name)) {
                        Toast.makeText(context, "è¯¥åŸŽå¸‚å·²ç»?æ˜¯å–œæ¬¢åŸŽå¸‚", Toast.LENGTH_SHORT).show();
                    } else {
                        if (!mCityRepository.isExistInCity(name)) {
                            Toast.makeText(context, "æš‚æ— è¯¥åŸŽå¸‚çš„å¤©æ°”ï¼ŒæœŸå¾…ä½ çš„å??é¦ˆ", Toast.LENGTH_SHORT).show();
                            return;
                        }
                        mCityRepository.getLoveCity(1, new CityDataSource.GetLoveCityCallBack() {
                            @Override
                            public void onSuccess(List<LoveCityEntity> loveCities) {
                                Logger.d(loveCities.get(0).getCityName() + "  "+ loveCities.get(0).getOrder());
                                mCityRepository.updateLocaitonCityOrder(loveCities.get(0).getCityName(),
                                        mCityRepository.getAllLoveCities().size()+1);
                                LoveCityEntity newLoveCity = new LoveCityEntity();
                                newLoveCity.setCityName(name);
                                newLoveCity.setOrder(1);
                                mCityRepository.addLoveCity(newLoveCity);

                            }

                            @Override
                            public void onFailure(String failureMessage) {
                                Logger.e(failureMessage);
                            }
                        });

                        getNewShowWeather();

                    }
                }
            }).setNegativeButton("å?–æ¶ˆ", new DialogInterface.OnClickListener() {
                @Override
                public void onClick(DialogInterface dialog, int which) {
                }
            }).show();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

