    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);

        //å½“è®¾ç½®çš„paddingå€¼å°?äºŽé»˜è®¤å€¼æ˜¯è®¾ç½®ä¸ºé»˜è®¤å€¼
        paddingT = DisplayUtil.dp2px(mContext, 20);
        paddingL = DisplayUtil.dp2px(mContext, 10);
        paddingR = DisplayUtil.dp2px(mContext, 15);
        paddingB = Math.max(paddingB, getPaddingBottom());

        //èŽ·å?–æµ‹é‡?æ¨¡å¼?
        //æ³¨æ„? HorizontalScrollViewçš„å­?View åœ¨æ²¡æœ‰æ˜Žç¡®æŒ‡å®šdpå€¼çš„æƒ…å†µä¸‹ widthModeæ€»æ˜¯MeasureSpec.UNSPECIFIED
        //å?Œç?† ScrollViewçš„å­?Viewçš„heightMode
        int widthMode = MeasureSpec.getMode(widthMeasureSpec);
        int heightMode = MeasureSpec.getMode(heightMeasureSpec);

        //èŽ·å?–æµ‹é‡?å¤§å°?
        int widthSize = MeasureSpec.getSize(widthMeasureSpec);
        int heightSize = MeasureSpec.getSize(heightMeasureSpec);


        if (widthMode == MeasureSpec.EXACTLY && heightMode == MeasureSpec.EXACTLY) {
            mWidth = widthSize + paddingL + paddingR;
            mHeight = heightSize;
        }

        //å¦‚æžœä¸ºwrap_content é‚£ä¹ˆViewå¤§å°?ä¸ºé»˜è®¤å€¼
        if (widthMode == MeasureSpec.UNSPECIFIED && heightMode == MeasureSpec.AT_MOST) {
            mWidth = defWidthPixel + paddingL + paddingR;
            mHeight = defHeightPixel + paddingT + paddingB;
        }

        //è®¾ç½®è§†å›¾çš„å¤§å°?
        setMeasuredDimension(mWidth, mHeight);

    }

